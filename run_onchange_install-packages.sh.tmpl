{{ if eq .chezmoi.os "darwin" -}}
#!/bin/bash

{{ if .isWorkComputer -}}
export HOMEBREW_GITHUB_API_TOKEN='{{ onepasswordRead "op://gv2pj3dcyg2wxx3ahtvgdamp2e/ne2c6f2t3ytzfuzvdhxt4agmdu/password" "EI6GPO6VNJAVLGDDID3B75JI6E" }}'
{{ end -}}

brew bundle --no-lock --file=/dev/stdin <<EOF
{{ range .packages.universal.taps -}}
tap {{ . | quote | replace " " "\", \"" }}
{{ end -}}
{{ range .packages.universal.brews -}}
brew {{ . | quote }}
{{ end -}}
{{ range .packages.universal.casks -}}
cask {{ . | quote }}
{{ end -}}
{{ range .packages.universal.mas -}}
mas {{ .name | quote }}, id: {{ .id }}
{{ end -}}
EOF
{{ end -}}

{{ if .isWorkComputer -}}

brew bundle --no-lock --file=/dev/stdin <<EOF
{{ range .packages.work.taps -}}
tap {{ . | quote | replace " " "\", \"" }}
{{ end -}}
{{ range .packages.work.brews -}}
brew {{ . | quote }}
{{ end -}}
{{ range .packages.work.casks -}}
cask {{ . | quote }}
{{ end -}}
{{ range .packages.work.mas -}}
mas {{ .name | quote }}, id: {{ .id }}
{{ end -}}
EOF
{{ end -}}

# Unfortunately I did not yet find a way to order scripts so I'm inlining this. Should all be pretty much a no-op anyways.
# We use the version of the secret to determine if we need to update the secret
# This needs to be kept in sync with the .gitconfig file
# Secret version: {{ (onepassword "okuhh55hdfabbnwvgzomsywrxe" "gv2pj3dcyg2wxx3ahtvgdamp2e" "EI6GPO6VNJAVLGDDID3B75JI6E").version }}

# Early abort if the key is already added
if gpg --list-secret-keys | grep -q {{ onepasswordRead "op://gv2pj3dcyg2wxx3ahtvgdamp2e/okuhh55hdfabbnwvgzomsywrxe/id" "EI6GPO6VNJAVLGDDID3B75JI6E" }}; then
    echo "GPG key is present already"
else
    # EOF the key into a temporary file

    tmpDir=$(mktemp -d)
    tmpFile="${tmpDir}/private.key"

    # Manually use the onepassword command to get the file
    op read --out-file $tmpFile op://gv2pj3dcyg2wxx3ahtvgdamp2e/okuhh55hdfabbnwvgzomsywrxe/gmail.key --account "EI6GPO6VNJAVLGDDID3B75JI6E"

    # Import the key
    gpg --import $tmpFile
fi



# Also inlined sub-script depending on a dependency

# hash of the mise config file, used to determine if we need to rerun this script
# mise/config.toml hash: {{ include "dot_config/mise/config.toml" | sha256sum }}

mise install -y
